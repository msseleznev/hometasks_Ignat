{"version":3,"sources":["p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","c","box","src","avatar","corner","item","name","message","time","messageData","HW1","SuperButton","red","green","orange","restProps","finalClassName","s","default","Affair","priorityClass","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","input","errorInput","superInput","container","e","currentTarget","value","key","selected","Greeting","setNameCallback","addUser","totalUsers","inputClass","button","disabled","GreetingContainer","users","addUserCallback","setName","setError","alert","length","trimmedName","trim","HW3","setUsers","user","id","v1","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","HW4","text","setText","showAlert","setChecked","column","blue","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.5f306479.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__NSO9-\",\"disabled\":\"SuperButton_disabled__13aB6\",\"red\":\"SuperButton_red__30NMR\",\"green\":\"SuperButton_green__JeWb4\",\"orange\":\"SuperButton_orange__aEnkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Message_box__1OHN0\",\"item\":\"Message_item__1OXGV\",\"corner\":\"Message_corner__TBNmO\",\"name\":\"Message_name__7e3bY\",\"message\":\"Message_message__3qyNN\",\"time\":\"Message_time__3OiX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SuperInputText_container__3Ww3L\",\"selected\":\"SuperInputText_selected__3dOQr\",\"superInput\":\"SuperInputText_superInput__3uref\",\"errorInput\":\"SuperInputText_errorInput__2_tRh\",\"error\":\"SuperInputText_error__1oNhW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affairs_affair__3t9IQ\",\"item\":\"Affairs_item__3ok7F\",\"middle\":\"Affairs_middle__Du0WG\",\"high\":\"Affairs_high__2QJZz\",\"low\":\"Affairs_low__Z8nUD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Greeting_item__3xjmG\",\"button\":\"Greeting_button__XIh4S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3t03S\",\"column\":\"HW4_column__36sAu\",\"testSpanError\":\"HW4_testSpanError__2NiqO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__2_c1-\",\"checkbox\":\"SuperCheckbox_checkbox__2oP8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2TOiq\"};","import React from 'react'\r\nimport c from './Message.module.css'\r\n\r\ntype propsMessageDataType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nexport function Message(props: propsMessageDataType) {\r\n    return (\r\n        <div className={c.box}>\r\n            <img src={props.avatar}/>\r\n            <div className={c.corner}/>\r\n            <div className={c.item} >\r\n                <div className={c.name}>{props.name}</div>\r\n                <div className={c.message}>{props.message}</div>\r\n                <div className={c.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {Message} from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Nick',\r\n    message: 'Привет!',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n\r\n    red?: boolean\r\n    green?: boolean\r\n    orange?: boolean\r\n\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, green, orange, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `\r\n    ${s.default}  \r\n    ${red ? s.red : s.default} \r\n    ${green ? s.green : s.default} \r\n    ${orange ? s.orange : s.default} \r\n    \r\n    ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\r\n    const priorityClass = s.item + ' ' + s[props.affair.priority]\r\n    return (\r\n        <div className={s.affair}>\r\n            <SuperButton onClick={deleteCallback}>x</SuperButton>\r\n            <div className={s.item}>{props.affair.name}</div>\r\n            <div className={priorityClass}>{props.affair.priority}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React, {Dispatch, SetStateAction} from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: Dispatch<SetStateAction<FilterType>>\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')} // need to fix\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div>\r\n            <SuperButton  onClick={setAll}>All</SuperButton>\r\n            <SuperButton red onClick={setHigh}>High</SuperButton>\r\n            <SuperButton green onClick={setMiddle}>Middle</SuperButton>\r\n            <SuperButton orange onClick={setLow}>Low</SuperButton>\r\n            {mappedAffairs}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\nimport s from './Affairs.module.css'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\n\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: string): AffairType[] => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    else if (filter === 'high') return affairs.filter(a => a.priority === 'high')\r\n    else if (filter === 'low') return affairs.filter(a => a.priority === 'low')\r\n    else if (filter === 'middle') return affairs.filter(a => a.priority === 'middle')// need to fix\r\n    else return []\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\r\n    return affairs.filter(a => a._id !== _id) // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr />\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input}  ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            <div className={s.selected}>\r\n                {error && <span className={finalSpanClassName}>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = s.error // need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <SuperInputText value={name}\r\n                            onChange={setNameCallback}\r\n                            className={inputClass}\r\n                            error={error}/>\r\n\r\n            <div className={s.button}>\r\n                <SuperButton onClick={addUser} disabled={!name}>add</SuperButton>\r\n                <span>{totalUsers}</span>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState, KeyboardEvent} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback: (name: string)=> void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        const trimmedName = e.currentTarget.value.trim()\r\n        if (trimmedName) {\r\n            setName(trimmedName) // need to fix\r\n            setError('')\r\n        } else {\r\n            setName('')\r\n            setError('name is require!')\r\n        }\r\n    }\r\n    const addUser = () => {\r\n        addUserCallback(name)\r\n        alert(`Hello ${name}!`) // need to fix\r\n        setName('')\r\n    }\r\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter' && name) {\r\n            addUser()\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            onEnter = {onEnter}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n    const  user = {\r\n        id: v1(),\r\n        name,\r\n    }\r\n        setUsers([...users, user]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox}  ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n\r\n            {children && <span  >{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'введите текст'\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n\r\n                    <SuperInputText\r\n                        value={text}\r\n                        onChangeText={setText}\r\n                        onEnter={showAlert}\r\n                        error={error}\r\n                        // spanClassName={s.testSpanError}\r\n                    />\r\n\r\n\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    checkbox one {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}>\r\n                    checkbox to test the change useState\r\n                </SuperCheckbox>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}